{
  "_from": "sweet-scroll",
  "_id": "sweet-scroll@3.0.1",
  "_inBundle": false,
  "_integrity": "sha512-jjBkRZ22ojwwYRtraRL5IlR9LHaa+GmhXMnz1TaqeCL5xdiMCZ86fNBilbF3WHz9sab2ihmCX3BiIZI6FmpAPg==",
  "_location": "/sweet-scroll",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "sweet-scroll",
    "fetchSpec": "latest",
    "name": "sweet-scroll",
    "raw": "sweet-scroll",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sweet-scroll/-/sweet-scroll-3.0.1.tgz",
  "_shasum": "6472a9b97915550c3213970d1a33c7cec8657328",
  "_shrinkwrap": null,
  "_spec": "sweet-scroll",
  "_where": "/Users/captn.lav/Dev/latinxinai.github.io",
  "author": {
    "name": "tsuyoshiwada"
  },
  "bugs": {
    "url": "https://github.com/tsuyoshiwada/sweet-scroll/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Modern and the sweet smooth scroll library.",
  "devDependencies": {
    "@types/jest": "^22.2.2",
    "browser-sync": "^2.23.6",
    "cpx": "^1.5.0",
    "dts-bundle": "^0.7.3",
    "gh-pages": "^1.1.0",
    "jest": "^22.4.3",
    "npm-run-all": "^4.1.2",
    "rollup": "^0.57.1",
    "rollup-plugin-typescript2": "^0.12.0",
    "rollup-watch": "^4.3.1",
    "tslint": "^5.9.1",
    "typescript": "^2.7.2",
    "uglify-es": "^3.3.9"
  },
  "files": [
    "decls",
    "sweet-scroll.d.ts",
    "sweet-scroll.js",
    "sweet-scroll.min.js"
  ],
  "homepage": "https://github.com/tsuyoshiwada/sweet-scroll",
  "jest": {
    "moduleFileExtensions": [
      "js",
      "ts",
      "tsx"
    ],
    "testMatch": [
      "**/__tests__/*.spec.ts?(x)"
    ],
    "transform": {
      "^.+\\.(ts|tsx)$": "<rootDir>/preprocessor.js"
    }
  },
  "keywords": [
    "animation",
    "scroll",
    "smooth scroll",
    "sweet",
    "sweet scroll"
  ],
  "license": "MIT",
  "main": "sweet-scroll.js",
  "name": "sweet-scroll",
  "optionalDependencies": {},
  "readme": "![sweet-scroll](https://raw.githubusercontent.com/tsuyoshiwada/sweet-scroll/artwork/repo-banner.png)\n\n[![Build Status](http://img.shields.io/travis/tsuyoshiwada/sweet-scroll.svg?style=flat-square)](https://travis-ci.org/tsuyoshiwada/sweet-scroll)\n[![npm version](https://img.shields.io/npm/v/sweet-scroll.svg?style=flat-square)](http://badge.fury.io/js/sweet-scroll)\n[![David](https://img.shields.io/david/dev/tsuyoshiwada/sweet-scroll.svg?style=flat-square)](https://david-dm.org/tsuyoshiwada/sweet-scroll/#info=devDependencies&view=table)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)](https://raw.githubusercontent.com/tsuyoshiwada/sweet-scroll/master/LICENSE)\n\n> ECMAScript2015+ & TypeScript Friendly, dependency-free smooth scroll library.\n\n:lollipop: [See Demo](http://tsuyoshiwada.github.io/sweet-scroll/)\n\n\n\n\n## Features\n\n* Dependecy-free!!\n* ECMAScript2015+ & TypeScript friendly\n* Use `requestAnimationFrame` API\n* Supports vertical and horizontal scroll\n* Supports dynamic trigger (event delegation)\n* Supports container for the scroll\n* Supports many easing types\n* Supports server-side rendering (Can load without putting out errors.)\n\n\n\n\n## Table of Contents\n\n* [Usage](#usage)\n    - [1. Install](#1-install)\n    - [2. Setup of HTML](#2-setup-of-html)\n    - [3. Initialize SweetScroll](#3-initialize-sweetscroll)\n* [Options](#options)\n* [Easings](#easings)\n    - [Built-in (22)](#built-in-22)\n    - [Advanced (9)](#advanced-9)\n* [Customizing Tips](#customizing-tips)\n    - [Specifying container elements](#specifying-container-elements)\n    - [Specify fixed header](#specify-fixed-header)\n    - [Override of options for each element](#override-of-options-for-each-element)\n    - [if you want to use in non anchor element](#if-you-want-to-use-in-non-anchor-element)\n    - [Do you feel scrolling is slow?](#do-you-feel-scrolling-is-slow)\n    - [Scrolling animation in another page](#scrolling-animation-in-another-page)\n* [API](#api)\n    - [new SweetScroll(options?: PartialOptions, container?: string | Element)](#new-sweetscrolloptions-partialoptions-container-string--element)\n    - [SweetScroll.create(options?: PartialOptions, container?: string | Element)](#sweetscrollcreateoptions-partialoptions-container-string--element)\n    - [to(distance: any, options?: PartialOptions)](#todistance-any-options-partialoptions)\n    - [toTop(distance: any, options?: PartialOptions)](#totopdistance-any-options-partialoptions)\n    - [toLeft(distance: any, options?: PartialOptions)](#toleftdistance-any-options-partialoptions)\n    - [toElement($el: Element, options?: PartialOptions)](#toelementel-element-options-partialoptions)\n    - [update(options: PartialOptions)](#updateoptions-partialoptions)\n    - [stop(gotoEnd: boolean = true)](#stopgotoend-boolean--true)\n    - [destroy()](#destroy)\n    - [Callbacks](#callbacks)\n* [Browser Support](#browser-support)\n    - [Scrolling with IE9](#scrolling-with-ie9)\n* [CHANGELOG](#changelog)\n* [Contibute](#contibute)\n    - [Development](#development)\n* [License](#license)\n\n\n\n\n## Usage\n\n### 1. Install\n\n#### via NPM\n\n```bash\n$ npm install sweet-scroll\n```\n\n##### use\n\n```typescript\nimport SweetScroll from 'sweet-scroll';\n```\n\n#### via MANUAL\n\n1. Download the [sweet-scroll.min.js](https://raw.githubusercontent.com/tsuyoshiwada/sweet-scroll/master/sweet-scroll.min.js)\n1. Load it in the script tag.\n\n```html\n<script src=\"sweet-scroll.min.js\"></script>\n```\n\n#### via CDN (UNPKG)\n\n```html\n<script src=\"https://unpkg.com/sweet-scroll/sweet-scroll.min.js\"></script>\n```\n\n\n### 2. Setup of HTML\n\n```html\n<a href=\"#intro\" data-scroll>Go to Introduction</a>\n...\n<div id=\"intro\">Introduction</div>\n```\n\n\n### 3. Initialize SweetScroll\n\nYou need to initialize an instance after `DOMContentLoaded`.\n\n```typescript\ndocument.addEventListener('DOMContentLoaded', () => {\n  const scroller = new SweetScroll({/* some options */});\n}, false);\n```\n\n\n\n\n## Options\n\nThe following options are applied by default. It can be customized as needed.\n\n```typescript\n{\n  trigger: '[data-scroll]',       // Selector for trigger (must be a valid css selector)\n  header: '[data-scroll-header]', // Selector or Element for fixed header (Selector of must be a valid css selector)\n  duration: 1000,                 // Specifies animation duration in integer\n  easing: 'easeOutQuint',         // Specifies the pattern of easing\n  offset: 0,                      // Specifies the value to offset the scroll position in pixels\n  vertical: true,                 // Enable the vertical scroll\n  horizontal: false,              // Enable the horizontal scroll\n  cancellable: true,              // When fired wheel or touchstart events to stop scrolling\n  updateURL: false,               // Update the URL hash on after scroll (true | false | 'push' | 'replace')\n  preventDefault: true,           // Cancels the container element click event\n  stopPropagation: true,          // Prevents further propagation of the container element click event in the bubbling phase\n  quickMode: false,               // Instantly scroll to the destination! (It's recommended to use it with `easeOutExpo`)\n\n  // Callbacks\n  before: null,\n  after: null,\n  cancel: null,\n  complete: null,\n  step: null,\n}\n```\n\n\n\n\n## Easings\n\nSupports the following easing.\n\n### Built-in (22)\n\n* **Normal**\n    - `linear`\n* **Quad**\n    - `easeInQuad`\n    - `easeOutQuad`\n    - `easeInOutQuad`\n* **Cubic**\n    - `easeInCubic`\n    - `easeOutCubic`\n    - `easeInOutCubic`\n* **Quart**\n    - `easeInQuart`\n    - `easeOutQuart`\n    - `easeInOutQuart`\n* **Quint**\n    - `easeInQuint`\n    - `easeOutQuint` **(default)**\n    - `easeInOutQuint`\n* **Sine**\n    - `easeInSine`\n    - `easeOutSine`\n    - `easeInOutSine`\n* **Expo**\n    - `easeInExpo`\n    - `easeOutExpo`\n    - `easeInOutExpo`\n* **Circ**\n    - `easeInCirc`\n    - `easeOutCirc`\n    - `easeInOutCirc`\n\n### Advanced (9)\n\nEasing functions that are not built in can pass functions directly.\n\n```typescript\nconst scroller = new SweetScroll({\n  easing: advancedEasingFunction,\n});\n```\n\n\n#### Elastic\n\n<details>\n  <summary><code>easeInElastic</code></summary>\n\n  ```typescript\n  const easeInElastic = (_, t, b, c, d) => {\n    let s = 1.70158;\n    let p = 0;\n    let a = c;\n    if (t === 0) return b;\n    if ((t /= d) === 1) return b + c;\n    if (!p) p = d * 0.3;\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * asin(c / a);\n    }\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n  };\n  ```\n</details>\n\n<details>\n  <summary><code>easeOutElastic</code></summary>\n\n  ```typescript\n  const easeOutElastic = (_, t, b, c, d) => {\n    let s = 1.70158;\n    let p = 0;\n    let a = c;\n    if (t === 0) return b;\n    if ((t /= d) === 1) return b + c;\n    if (!p) p = d * 0.3;\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * asin(c / a);\n    }\n    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n  };\n  ```\n</details>\n\n<details>\n  <summary><code>easeInOutElastic</code></summary>\n\n  ```typescript\n  const easeInOutElastic = (_, t, b, c, d) => {\n    let s = 1.70158;\n    let p = 0;\n    let a = c;\n    if (t === 0) return b;\n    if ((t /= d / 2) === 2) return b + c;\n    if (!p) p = d * (0.3 * 1.5);\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    }\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n  };\n  ```\n</details>\n\n\n#### Back\n\n<details>\n  <summary><code>easeInBack</code></summary>\n\n  ```typescript\n  const easeInBack = (_, t, b, c, d, s = 1.70158) => (\n    c * (t /= d) * t * ((s + 1) * t - s) + b\n  );\n  ```\n</details>\n\n<details>\n  <summary><code>easeOutBack</code></summary>\n\n  ```typescript\n  const easeOutBack = (_, t, b, c, d, s = 1.70158) => (\n    c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b\n  );\n  ```\n</details>\n\n<details>\n  <summary><code>easeInOutBack</code></summary>\n\n  ```typescript\n  const easeInOutBack = (_, t, b, c, d, s = 1.70158) => (\n    (t /= d / 2) < 1\n      ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b\n      : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b\n  );\n  ```\n</details>\n\n\n#### Bounce\n\n<details>\n  <summary><code>easeOutBounce</code></summary>\n\n  ```typescript\n  const easeOutBounce = (_, t, b, c, d) => {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    } else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n  };\n  ```\n</details>\n\n<details>\n  <summary><code>easeInBounce</code></summary>\n\n  ```typescript\n  const easeOutBounce = (_, t, b, c, d) => {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    } else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n  };\n\n  const easeInBounce = (x, t, b, c, d) => (\n    c - easeOutBounce(x, d - t, 0, c, d) + b\n  );\n  ```\n</details>\n\n<details>\n  <summary><code>easeInOutBounce</code></summary>\n\n  ```typescript\n  const easeOutBounce = (_, t, b, c, d) => {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    } else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n  };\n\n  const easeInBounce = (x, t, b, c, d) => (\n    c - easeOutBounce(x, d - t, 0, c, d) + b\n  );\n\n  const easeInOutBounce = (x, t, b, c, d) => (\n    t < d / 2\n      ? easeInBounce(x, t * 2, 0, c, d) * 0.5 + b\n      : easeOutBounce(x, t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b\n  );\n  ```\n</details>\n\n---\n\n[Live demo](http://tsuyoshiwada.github.io/sweet-scroll/easings.html)\n\n\n\n\n## Customizing Tips\n\n### Specifying container elements\n\nIn the following example we have specified in the container for scrolling the `#container`.\n\n```html\n<div id=\"container\">\n  <a href=\"#heading2\" data-scroll>Go to Heading2</a>\n  ...\n  <h2 id=\"heading2\">Heading2</h2>\n</div>\n```\n\n```typescript\n// Specified in the CSS Selector\nconst scroller = new SweetScroll({/* some options */}, '#container');\n\n// Specified in the Element\nconst scroller = new SweetScroll({/* some options */}, document.getElementById('container'));\n```\n\n\n### Specify fixed header\n\nAdd the `data-scroll-header` attribute in order to offset the height of the fixed header.\n\n```html\n<header data-scroll-header></header>\n```\n\nSpecify the CSS Selector in `header` option instead of the `data-scroll-header` attribute.\n\n```typescript\nconst scroller = new SweetScroll({\n  header: '#header',\n});\n```\n\n\n### Override of options for each element\n\nYou can override the default options by passing the option in `JSON` format to the `data-scroll-options`.\n\n```html\n<a href=\"#target\" data-scroll data-scroll-options='{\"easing\": \"easeOutExpo\"}'>Go to Target</a>\n```\n\n\n### if you want to use in non anchor element\n\nWill use the data-scroll attribute instead of href.\n\n```html\n<button type=\"button\" data-scroll=\"+=500\">Scroll under 500px</button>\n```\n\n\n### Do you feel scrolling is slow?\n\nYou can solve with `quickMode` options!\n\n```typescript\nconst scroller = new SweetScroll({\n  quickMode: true,\n  easing: 'easeOutExpo', // Recommended\n});\n```\n\n`quickMode` finishes scrolling in a moment.\n\n\n\n### Scrolling animation in another page\n\nThe following, Introduce one of the mounting method.\n\n```typescript\ndocument.addEventListener('DOMContentLoaded', () => {\n  const scroller = new SweetScroll();\n  const hash = window.location.hash;\n  const needsInitialScroll = document.getElementById(hash.substr(1)) != null;\n\n  if (needsInitialScroll) {\n    window.location.hash = '';\n  }\n\n  window.addEventListener('load', () => {\n    if (needsInitialScroll) {\n      scroller.to(hash, { updateURL: 'replace' });\n    }\n  }, false);\n}, false);\n```\n\n[Live demo](http://tsuyoshiwada.github.io/sweet-scroll/initial-scroll.html#footer)\n\nYou can also achieve the same thing in other ways by using the provided API.\n\n\n\n## API\n\n\n### new SweetScroll(options?: PartialOptions, container?: string | Element)\n\nWill generate a SweetScroll instance.\n\n**Example:**\n\n```typescript\nconst scroller = new SweetScroll({\n  duration: 1200,\n  easing: 'easeOutExpo',\n}, '#container');\n```\n\n\n### SweetScroll.create(options?: PartialOptions, container?: string | Element)\n\nWill generate a SweetScroll instance. (factory method)\n\n**Example:**\n\n```typescript\nconst scroller = SweetScroll.create({\n  duration: 1200,\n  easing: 'easeOutExpo',\n}, '#container');\n```\n\n\n### to(distance: any, options?: PartialOptions)\n\nScroll animation to the specified `distance`.  \n`distance` to can specify the CSS Selector or scroll position.\n\n**Example:**\n\n```typescript\nconst scroller = new SweetScroll();\n\n// CSS Selector of target element\nscroller.to('#footer');\n\n// Object\nscroller.to({ top: 1000, left: 20 });\n\n// Array (top:0, left:1000)\nscroller.to([0, 1000]);\n\n// Number (Priority to vertical scroll position. by default.)\nscroller.to(500);\n\n// String (Relative position)\nscroller.to('+=500');\nscroller.to('-=200');\n```\n\n\n### toTop(distance: any, options?: PartialOptions)\n\nVertical scroll animation to the specified `distance`.  \n\n**Example:**\n\n```typescript\nscroller.toTop(0);\n```\n\n\n### toLeft(distance: any, options?: PartialOptions)\n\nHorizontal scroll animation to the specified `distance`.  \n\n**Example:**\n\n```typescript\nscroller.toLeft(1500);\n```\n\n\n### toElement($el: Element, options?: PartialOptions)\n\nScroll animation to the specified `Element`.\n\n**Example:**\n\n```typescript\nscroller.toElement(document.getElementById('content'));\n```\n\n\n### update(options: PartialOptions)\n\nWill update the SweetScroll instance.  \nPrimarily used in the case of option update.\n\n**Example:**\n\n```typescript\nscroller.update({\n  trigger: 'a[href^=\"#\"]',\n  duration: 3000,\n});\n```\n\n\n### stop(gotoEnd: boolean = true)\n\n**gotoEnd: {Boolean}**\n\nWill stop the current scroll animation.\n\n**Example:**\n\n```typescript\nscroller.stop(true);\n```\n\n\n### destroy()\n\nWill destroy the SweetScroll instance.  \nDisable of the method and event handler.\n\n**Example:**\n\n```typescript\nscroller.destroy();\n```\n\n\n### Callbacks\n\nIn `before` and `after`, you will pass the coordinates and the triggering element in the argument.  \nIn addition, you can stop the scrolling by return a `before` in `false`.\n\n**Example:**\n\n```typescript\nconst scroller = new SweetScroll({\n\n  // Stop scrolling case of trigger element that contains the `is-disabled` class.\n  before: (offset: Offset, $trigger: Element | null, scroller: SweetScroll): boolean | void => {\n    console.log('Before!!', offset, scroller);\n    if ($trigger && $trigger.classList.contains('is-disabled')) {\n      return false;\n    }\n  },\n\n  // If the `wheel` or `touchstart` event is called\n  cancel: (scroller: SweetScroll): void => {\n    console.log('Cancel!!', scroller);\n  },\n\n  // Scroll animation is complete\n  after: (offset: Offset, $trigger: Element | null, scroller: SweetScroll): void => {\n    console.log('After!!', offset, $trigger, scroller);\n  },\n\n  // Scroll animation is complete (`after` or `cancel`)\n  complete: (isCancel: boolean, scroller: SweetScroll): void => {\n    console.log('Complete!!', isCancel, scroller);\n  },\n\n  // Each animation frame\n  step: (time: number, scroller: SweetScroll): void => {\n    console.log('step', time, scroller);\n  },\n});\n```\n\n**Extends Class:**\n\nThe following is a pattern to override a method in the inheritance destination class.\n\n```typescript\nimport SweetScroll, { Offset } from 'sweet-scroll';\n\nclass MyScroll extends SweetScroll {\n  protected onBefore(offset: Offset, $trigger: Element | null): boolean | void {\n    // Stop scrolling case of trigger element that contains the `is-disabled` class.\n    console.log('Before!!', offset);\n    if ($trigger && $trigger.classList.contains('is-disabled')) {\n      return false;\n    }\n  }\n\n  protected onCancel(): void {\n    console.log('Canell!!');\n  }\n\n  protected onAfter(offset: Offset, $trigger: Element | null): void {\n    console.log('After!!', offset, $trigger);\n  }\n\n  protected onComplete(isCancel: boolean): void {\n    console.log('Complete!!', isCancel);\n  }\n\n  protected onStep(time: number): void {\n    console.log('step', time);\n  }\n}\n```\n\n\n\n\n## Browser Support\n\nWorks in `IE10+`, and all modern browsers.\n\n\n### Scrolling with IE9\n\nIt is necessary to use [polyfill](https://gist.github.com/paulirish/1579671) or ponyfill of `requestAnimationFrame`.\n\n<details>\n  <summary>Example ponyfill</summary>\n\n  Using [raf](https://github.com/chrisdickinson/raf) module.\n\n  ```typescript\n  import raf from 'raf';\n  import SweetScroll from 'sweet-scroll';\n\n  SweetScroll.raf = raf;\n  SweetScroll.caf = raf.cancel;\n  ```\n</details>\n\n\n\n\n## CHANGELOG\n\nSee the [CHANGELOG.md](https://github.com/tsuyoshiwada/sweet-scroll/blob/master/CHANGELOG.md)\n\n\n\n\n## Contibute\n\n1. Fork it!\n1. Create your feature branch: `git checkout -b my-new-feature`\n1. Commit your changes: `git commit -am 'Add some feature'`\n1. Push to the branch: `git push origin my-new-feature`\n1. Submit a pull request :muscle:\n\nBugs, feature requests and comments are more than welcome in the [issues](https://github.com/tsuyoshiwada/sweet-scroll/issues).\n\n\n### Development\n\nWe will develop using the following npm scripts.\n\n\n#### `npm start`\n\nLaunch the local server and let the demo run. Opening http://localhost:3000 in your browser.\n\n\n#### `npm run build`\n\nCompile TypeScript and create type definitions.\n\n\n#### `npm run test`\n\nRun unit testing with Jest.\n\n\n\n\n## License\n\n[MIT © tsuyoshiwada](./LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tsuyoshiwada/sweet-scroll.git"
  },
  "scripts": {
    "build": "npm-run-all build:bundle build:minify build:decls",
    "build:bundle": "rollup -c",
    "build:decls": "dts-bundle --baseDir ./ --name sweet-scroll --main decls/index.d.ts",
    "build:minify": "uglifyjs -c -m --comments -o sweet-scroll.min.js -- sweet-scroll.js",
    "build:watch": "npm run build:bundle -- --watch",
    "clean": "rm -rf decls .rpt2_cache",
    "docs": "npm-run-all -p docs:server docs:watch",
    "docs:build": "cpx sweet-scroll.js docs",
    "docs:deploy": "gh-pages -t -d docs",
    "docs:server": "browser-sync start -s docs -f \"docs/**/*\" --no-notify --no-ghost-mode --no-open",
    "docs:watch": "npm run docs:build -- --watch",
    "prebuild": "npm run clean",
    "predocs:deploy": "npm run docs:build",
    "prepublishOnly": "npm run build",
    "start": "npm-run-all -p build:watch docs",
    "test": "npm-run-all test:lint test:unit",
    "test:browser": "jest --setupTestFrameworkScriptFile=./jest/setup-for-browser.js --testPathPattern \"browser.spec.ts\"",
    "test:browser:watch": "npm run test:browser -- --watch",
    "test:lint": "tslint -c tslint.json \"src/**/*.ts\"",
    "test:node": "jest --env=node --testPathPattern \"node.spec.ts\"",
    "test:node:watch": "npm run test:node -- --watch",
    "test:unit": "npm-run-all test:browser test:node"
  },
  "types": "sweet-scroll.d.ts",
  "version": "3.0.1"
}
